using Base: String, Bool, Complex
# using Core: Matrix, Vector
using LinearAlgebra
using Yao

include("CHform.jl")
include("GSmat.jl")
include("MetroHast.jl")

function translate(circ::Vector{Vector{String}}, N::Int8)
    N = Int64(N)
    out = chain(N, put(N, i=>I2) for i in 1:N)
    println(typeof(out))
    for d in 1:length(circ[1])
        qb = circ[2][d]
        gate = circ[1][d]
        if (gate == "S")
            q = parse(Int64, qb)
            # push!(out, chain(N, put(N, q=>S))) #bloody language with too many chromosomes can't recognize the S gate even though it is defined
            push!(out, chain(N, put(N, q=>T)))
            push!(out, chain(N, put(N, q=>T)))
        elseif (gate == "H")
            q = parse(Int64, qb)
            push!(out, chain(N, put(N, q=>H)))
        elseif (gate == "Z")
            q = parse(Int64, qb)
            push!(out, chain(N, put(q=>Z)))
        elseif (gate == "X")
            q = parse(Int64, qb)
            push!(out, chain(N, put(N, q=>X)))
        elseif (gate == "CZ")
            qbidx = findfirst(" ", qb)[1]
            q = parse(Int64,qb[1:qbidx])
            r = parse(Int64,qb[qbidx+1:end])
            push!(out, cz(q, Int64(r)))
        elseif (gate == "CX")
            qbidx = findfirst(" ", qb)[1]
            q = parse(Int64,qb[1:qbidx])
            r = parse(Int64,qb[qbidx+1:end])
            push!(out, cnot(q, Int64(r)))
        # elseif (gate == "Id") #identity gate multiplied by some factor. The qubit is not required and is instead replaced by the factor 
        #     factor = parse(Complex{Float64},qb)
        #     CHf.w *= factor
        end   
    end
    return out
end

function randomCirc(N::Int8, Ngates::Int64)
    circ::Vector{Vector{String}} = [[],[]]
    gatesSel::Vector{String} = ["H", "S", "X", "Z", "CX", "CZ"]
    for k in 1:Ngates
        gate::String = rand(gatesSel)
        if gate == "CX" || gate == "CZ"
            q = rand(1:N)
            r = rand(1:N)
            while q == r 
                r = rand(1:N) 
            end
            append!(circ[1], [gate])
            append!(circ[2], [string(string(q), " ", string(r))])
        else
            q = rand(1:N)
            append!(circ[1], [gate])
            append!(circ[2], [string(q)])
        end
    end
    return circ
end

function spH(st2:: ArrayReg{2, ComplexF64, Matrix{ComplexF64}}, st1:: ArrayReg{2, ComplexF64, Matrix{ComplexF64}}, N::Int8, J::Float64, h::Float64)
    # print("tut")
    st2vec = state(st2)
    amp = 0.
    for i in 1:N 
        tmp = deepcopy(st1)
        zzchain = translate([["Z","Z"],[string(i), string(mod(i,N)+1)]], N)
        apply!(tmp, zzchain)
        amp += -J* dot(st2vec, state(tmp))
        tmp = deepcopy(st1)
        xchain = translate([["X"],[string(i)]], N)
        apply!(tmp, xchain)
        amp += -h* dot(st2vec, state(tmp))
    end
    return amp
end

N = Int8(20)
Ngates = 500
Ntries = 10

J = 1.
h = 1.

# a = [1, 2, 3, 4, 5, 6]
# println(a[1:3])
# println(a[3:end])

for k in 1:Ntries
    circ1 = [["Z", "S", "S", "Z", "S", "X", "CX", "Z", "X", "H", "H", "CX", "X", "X", "H", "Z", "Z", "H", "H", "H", "CZ", "CX", "CZ", "CZ", "CX", "Z", "S", "H", "X", "Z", "Z", "S", "CX", "CX", "Z", "Z", "CX", "CX", "H", "Z", "Z", "CZ", "CX", "S", "S", "X", "Z", "X", "CZ", "CZ", "CX", "Z", "Z", "CX", "CX", "Z", "S", "CZ", "H", "H", "CZ", "S", "CX", "S", "Z", "S", "H", "S", "CX", "X", "X", "S", "Z", "X", "CZ", "H", "X", "H", "CZ", "CX", "CZ", "Z", "S", "CX", "X", "CZ", "CZ", "X", "X", "X", "H", "CX", "H", "Z", "S", "CX", "CX", "CZ", "CZ", "CZ", "S", "H", "X", "CZ", "Z", "S", "X", "CX", "CX", "H", "S", "H", "S", "Z", "H", "Z", "X", "CZ", "Z", "X", "CZ", "S", "CZ", "X", "CX", "H", "Z", "H", "H", "CX", "CX", "CX", "Z", "CX", "X", "Z", "H", "H", "S", "H", "X", "CX", "Z", "S", "Z", "Z", "CX", "CZ", "S", "CX", "CX", "H", "CZ", "H", "CX", "H", "H", "X", "CZ", "CX", "Z", "Z", "S", "CZ", "S", "S", "H", "X", "S", "Z", "H", "S", "CX", "CX", "X", "S", "X", "X", "CZ", "CX", "H", "Z", "S", "CZ", "CZ", "Z", "X", "H", "CZ", "CZ", "H", "Z", "CX", "X", "X", "H", "CZ", "X", "CX", "CZ", "CZ", "CX", "Z", "CX", "X", "Z", "CX", "H", "S", "H", "CZ", "H", "Z", "S", "Z", "S", "CZ", "CZ", "S", "CZ", "Z", "Z", "X", "H", "CZ", "S", "X", "H", "CZ", "H", "H", "CZ", "S", "X", "Z", "H", "CZ", "H", "X", "H", "Z", "H", "CZ", "CZ", "Z", "S", "H", "X", "S", "X", "H", "H", "CZ", "S", "Z", "CX", "Z", "S", "X", "X", "Z", "H", "X", "Z", "Z", "CX", "CZ", "CZ", "X", "X", "Z", "CZ", "H", "X", "Z", "H", "S", "X", "CX", "H", "S", "H", "CZ", "S", "CX", "H", "H", "CZ", "CZ", "Z", "CZ", "CZ", "H", "H", "X", "X", "Z", "X", "Z", "Z", "Z", "S", "CX", "CZ", "X", "X", "X", "CX", "H", "CX", "H", "H", "X", "Z", "S", "Z", "Z", "CZ", "X", "CZ", "X", "X", "H", "H", "CZ", "CZ", "X", "H", "CX", "X", "S", "X", "CX", "H", "CX", "S", "Z", "X", "CZ", "X", "CX", "Z", "S", "CZ", "Z", "H", "CX", "X", "X", "X", "S", "S", "Z", "X", "CX", "CZ", "Z", "CZ", "CZ", "CZ", "Z", "CZ", "H", "H", "CZ", "X", "H", "CX", "X", "CZ", "H", "CX", "X", "CZ", "Z", "X", "S", "X", "CZ", "X", "CZ", "CX", "S", "S", "X", "CX", "H", "S", "Z", "Z", "H", "S", "S", "CZ", "H", "CZ", "X", "Z", "H", "H", "H", "X", "CZ", "Z", "Z", "H", "CZ", "CZ", "H", "X", "H", "S", "X", "CX", "CX", "CZ", "X", "X", "S", "Z", "S", "H", "X", "X", "X", "CX", "H", "X", "Z", "CZ", "CX", "S", "Z", "S", "S", "H", "Z", "X", "Z", "X", "S", "CZ", "H", "Z", "CX", "H", "Z", "S", "X", "Z", "X", "H", "CZ", "H", "CZ", "X", "CX", "CZ", "H", "CX", "CX", "S", "CX", "S", "S", "X", "H", "CZ", "CX", "CZ", "Z", "CZ", "S", "S", "H", "Z", "X", "X", "Z", "CZ", "Z", "S", "Z", "X", "Z", "X", "Z", "S", "CX", "H", "X", "Z", "CX", "S", "H", "CX", "CZ", "CX", "S", "CZ"], ["10", "4", "16", "1", "8", "19", "14 17", "4", "5", "12", "18", "2 9", "3", "18", "18", "2", "16", "15", "1", "19", "11 5", "3 19", "7 13", "4 7", "9 15", "2", "16", "19", "7", "11", "7", "14", "17 6", "16 14", "16", "13", "20 19", "13 5", "4", "3", "18", "5 8", "19 8", "5", "1", "8", "6", "19", "13 14", "11 8", "19 14", "6", "4", "4 9", "7 6", "20", "16", "10 2", "18", "16", "19 13", "7", "6 17", "7", "8", "10", "9", "10", "11 5", "10", "13", "7", "18", "3", "12 16", "2", "16", "11", "3 6", "18 14", "5 10", "16", "11", "3 14", "3", "16 5", "2 3", "12", "6", "4", "16", "7 8", "14", "16", "10", "2 14", "5 20", "7 19", "12 14", "16 6", "16", "14", "19", "2 14", "3", "8", "18", "4 10", "20 12", "14", "3", "1", "8", "5", "5", "12", "14", "7 17", "2", "4", "1 20", "9", "19 9", "15", "5 19", "18", "9", "20", "7", "16 5", "7 6", "6 16", "3", "16 4", "14", "7", "2", "12", "20", "18", "13", "19 1", "8", "13", "5", "19", "12 16", "8 11", "14", "20 11", "1 17", "19", "12 16", "15", "1 6", "12", "9", "15", "12 3", "11 17", "1", "8", "4", "1 5", "5", "20", "14", "6", "6", "1", "2", "8", "3 12", "12 5", "6", "8", "7", "5", "15 7", "7 4", "12", "6", "20", "19 15", "14 10", "7", "11", "19", "11 9", "13 1", "16", "13", "10 18", "3", "3", "10", "14 19", "9", "5 2", "5 13", "8 4", "15 19", "17", "6 3", "12", "19", "10 9", "8", "10", "11", "19 7", "4", "19", "3", "12", "10", "7 1", "3 10", "16", "1 4", "3", "16", "5", "19", "6 17", "17", "1", "20", "9 18", "14", "16", "19 14", "6", "15", "5", "13", "1 2", "16", "16", "3", "12", "7", "3 10", "15 8", "10", "16", "6", "15", "3", "4", "13", "8", "1 10", "9", "18", "20 3", "7", "8", "13", "19", "15", "9", "8", "14", "5", "19 5", "11 7", "15 2", "15", "11", "3", "6 17", "12", "13", "7", "18", "8", "9", "19 5", "11", "12", "11", "17 5", "13", "9 15", "9", "8", "20 9", "19 4", "18", "18 11", "16 11", "8", "15", "19", "15", "17", "5", "10", "15", "13", "16", "1 5", "14 12", "4", "18", "8", "17 3", "7", "1 17", "10", "1", "7", "19", "16", "13", "10", "15 7", "19", "1 10", "7", "7", "13", "13", "10 8", "1 13", "5", "14", "1 8", "19", "10", "18", "18 4", "18", "2 11", "9", "20", "8", "7 14", "15", "4 5", "20", "19", "16 19", "4", "16", "18 17", "15", "13", "5", "4", "8", "18", "10", "9 19", "4 18", "15", "19 20", "18 19", "6 3", "13", "3 2", "2", "17", "10 5", "17", "2", "6 4", "20", "3 20", "2", "2 11", "17", "19 15", "6", "10", "1", "10", "19 18", "15", "7 17", "6 8", "6", "17", "12", "12 17", "3", "6", "15", "16", "1", "5", "1", "15 20", "2", "17 9", "14", "12", "18", "11", "5", "11", "3 19", "17", "11", "5", "17 1", "4 6", "14", "15", "13", "5", "7", "9 8", "4 13", "17 4", "10", "5", "4", "4", "1", "1", "3", "7", "19", "9 20", "8", "8", "7", "3 15", "15 13", "13", "2", "13", "15", "20", "7", "16", "7", "16", "5", "7 18", "13", "11", "6 7", "2", "5", "6", "12", "15", "9", "4", "20 14", "15", "6 11", "5", "7 5", "8 20", "6", "20 15", "8 13", "14", "16 1", "20", "2", "2", "14", "9 17", "4 19", "2 9", "7", "5 9", "13", "3", "9", "4", "10", "3", "10", "16 2", "15", "1", "18", "19", "3", "19", "10", "5", "20 19", "1", "19", "4", "14 6", "3", "1", "14 9", "4 10", "13 12", "4", "19 15"]]
    circ2 = [["X", "X", "X", "X", "Z", "X", "S", "H", "H", "CZ", "Z", "H", "X", "Z", "X", "X", "CX", "S", "CZ", "X", "Z", "CZ", "Z", "CX", "S", "X", "X", "S", "S", "H", "X", "H", "S", "Z", "X", "CZ", "Z", "H", "X", "Z", "CX", "CX", "S", "CZ", "CX", "H", "X", "CX", "H", "S", "CX", "X", "Z", "S", "H", "Z", "H", "CX", "Z", "CX", "Z", "CX", "Z", "CX", "X", "S", "S", "Z", "CX", "CZ", "Z", "CX", "CX", "CX", "CX", "CX", "CX", "CX", "CX", "X", "Z", "X", "S", "X", "CZ", "X", "X", "CZ", "CX", "H", "X", "X", "X", "H", "CZ", "CZ", "CZ", "X", "X", "Z", "Z", "H", "CZ", "S", "S", "Z", "S", "H", "CZ", "H", "H", "CZ", "CX", "S", "X", "H", "H", "Z", "H", "CX", "CX", "S", "X", "Z", "X", "S", "X", "X", "Z", "H", "CX", "CX", "X", "S", "CX", "CZ", "Z", "Z", "H", "Z", "X", "S", "S", "H", "S", "CX", "CZ", "CX", "S", "S", "X", "X", "Z", "X", "S", "CZ", "Z", "H", "H", "CX", "S", "S", "CZ", "H", "CX", "H", "CX", "X", "Z", "H", "CZ", "X", "X", "CX", "CZ", "CZ", "H", "H", "Z", "H", "H", "CX", "S", "Z", "X", "X", "S", "CZ", "H", "H", "Z", "S", "H", "H", "X", "CZ", "H", "H", "H", "CZ", "S", "Z", "X", "H", "S", "CZ", "CX", "CX", "H", "Z", "Z", "CX", "Z", "Z", "S", "Z", "CZ", "S", "X", "H", "CZ", "S", "X", "S", "S", "X", "CZ", "CX", "H", "X", "S", "CX", "CX", "Z", "CX", "CZ", "CX", "S", "X", "H", "CZ", "CZ", "CX", "CX", "H", "H", "S", "X", "H", "Z", "H", "S", "CZ", "CZ", "H", "Z", "Z", "X", "X", "H", "CX", "Z", "CX", "S", "CX", "CZ", "S", "S", "S", "CX", "H", "CX", "CZ", "S", "CX", "H", "H", "S", "S", "CX", "CZ", "CZ", "S", "H", "CZ", "CZ", "X", "H", "CZ", "S", "Z", "CZ", "S", "CZ", "Z", "S", "CX", "CX", "Z", "H", "CX", "CX", "S", "CX", "X", "CZ", "Z", "X", "CX", "X", "X", "H", "X", "CZ", "CZ", "S", "H", "S", "CX", "H", "Z", "CX", "Z", "Z", "H", "Z", "H", "Z", "S", "CZ", "CX", "CX", "CX", "H", "H", "S", "X", "S", "CX", "H", "CX", "X", "S", "X", "H", "H", "S", "X", "Z", "S", "S", "X", "S", "H", "CX", "CZ", "H", "H", "S", "H", "CX", "X", "X", "S", "H", "CX", "X", "S", "CX", "S", "CX", "X", "Z", "CZ", "Z", "Z", "CX", "S", "CZ", "Z", "H", "X", "Z", "Z", "H", "CX", "H", "H", "CX", "CX", "S", "X", "Z", "CX", "X", "CX", "CZ", "S", "H", "CZ", "H", "Z", "Z", "H", "S", "CZ", "H", "X", "CZ", "CX", "H", "CZ", "CX", "S", "X", "CX", "CZ", "CX", "Z", "H", "X", "X", "CX", "Z", "X", "H", "Z", "Z", "H", "CX", "CX", "X", "CZ", "S", "CZ", "CZ", "H", "CZ", "X", "Z", "CX", "X", "CX", "X", "H", "H", "CZ", "S", "S", "Z", "H", "Z", "CX", "Z", "Z", "CX", "X", "CX", "CZ", "S", "Z", "CX", "CX", "X", "H", "S", "S", "H", "H", "X", "S", "CZ", "S", "CZ", "X", "H", "CZ", "CZ", "X", "X", "X", "H", "X", "S", "CX", "Z", "S", "CX", "CZ", "X", "CZ", "CZ", "X", "CX", "S", "CZ", "CZ", "CZ", "CZ", "X"], ["11", "7", "13", "15", "8", "3", "18", "18", "15", "14 6", "20", "14", "5", "2", "2", "9", "18 16", "18", "10 8", "11", "10", "1 15", "6", "15 6", "7", "20", "16", "8", "11", "1", "17", "3", "4", "17", "19", "17 7", "7", "6", "7", "10", "7 11", "17 12", "18", "18 20", "19 12", "19", "8", "14 1", "6", "15", "17 18", "6", "19", "16", "3", "9", "8", "10 15", "18", "10 1", "9", "1 3", "7", "12 4", "16", "14", "2", "19", "20 1", "2 12", "2", "6 13", "13 1", "17 15", "12 5", "1 16", "9 2", "15 1", "10 13", "13", "7", "16", "10", "2", "7 10", "8", "8", "2 7", "20 5", "16", "12", "17", "19", "18", "3 8", "2 5", "5 7", "4", "9", "11", "17", "4", "8 7", "16", "13", "14", "10", "2", "16 20", "14", "3", "7 15", "2 19", "9", "4", "18", "14", "4", "11", "4 20", "10 7", "3", "12", "5", "13", "14", "4", "15", "16", "1", "17 1", "8 17", "9", "1", "20 2", "3 6", "3", "15", "15", "13", "11", "14", "16", "17", "20", "13 10", "7 16", "9 6", "10", "1", "3", "15", "19", "14", "12", "10 6", "14", "7", "18", "19 7", "15", "1", "14 5", "19", "18 2", "13", "18 13", "17", "4", "20", "12 15", "7", "18", "12 8", "14 2", "14 17", "5", "6", "13", "7", "8", "19 4", "6", "7", "20", "6", "19", "19 8", "19", "19", "17", "13", "10", "1", "20", "20 9", "9", "3", "3", "18 1", "11", "15", "1", "12", "11", "20 14", "6 8", "9 14", "18", "17", "5", "3 4", "6", "18", "19", "12", "1 15", "17", "16", "18", "12 3", "3", "6", "5", "15", "11", "14 4", "16 19", "10", "16", "18", "3 18", "7 15", "15", "20 9", "13 7", "18 4", "6", "1", "19", "15 13", "14 5", "10 19", "9 18", "14", "18", "3", "6", "18", "3", "8", "6", "6 11", "14 13", "8", "8", "17", "1", "11", "7", "15 13", "11", "2 3", "7", "6 13", "8 20", "7", "13", "11", "18 11", "6", "9 8", "5 16", "14", "11 8", "14", "4", "14", "14", "11 15", "9 6", "7 15", "5", "4", "4 13", "15 14", "17", "15", "20 17", "19", "1", "2 6", "2", "5 10", "11", "19", "16 12", "2 6", "6", "6", "14 9", "13 8", "6", "18 9", "2", "2 9", "6", "3", "3 20", "18", "2", "5", "9", "15 13", "18 15", "9", "6", "6", "14 1", "12", "14", "16 20", "20", "2", "5", "9", "18", "18", "8", "3 13", "10 12", "10 9", "5 8", "19", "13", "3", "19", "3", "12 15", "1", "4 9", "18", "16", "14", "3", "8", "16", "6", "17", "2", "20", "19", "12", "16", "8 7", "15 11", "2", "11", "4", "11", "10 13", "13", "3", "13", "16", "5 9", "19", "14", "7 19", "6", "20 18", "2", "12", "1 8", "14", "6", "7 12", "15", "17 18", "8", "16", "19", "20", "8", "9", "9 2", "1", "18", "16 12", "13 18", "15", "11", "13", "15 18", "19", "8 20", "15 4", "8", "6", "2 6", "18", "6", "18", "2", "8", "6 18", "2", "8", "12 18", "11 18", "7", "5 10", "13 14", "4", "20", "13 4", "2 16", "18 11", "2", "20", "6", "14", "12 3", "18", "6", "6", "1", "12", "18", "4 7", "18 9", "3", "8 7", "19", "8 18", "8 11", "11", "16 17", "13", "13", "10 1", "17", "11 10", "16", "5", "12", "20 13", "12", "6", "5", "14", "8", "12 15", "17", "17", "11 17", "15", "9 7", "20 4", "2", "14", "1 10", "20 18", "16", "20", "20", "2", "17", "5", "8", "19", "3 17", "16", "16 18", "6", "16", "2 13", "8 15", "19", "19", "7", "20", "12", "1", "1 15", "17", "14", "14 17", "19 10", "16", "9 16", "3 10", "5", "9 18", "19", "10 9", "8 1", "1 4", "8 3", "1"]]

    # circ1 = randomCirc(N, Ngates)
    # circ2 = randomCirc(N, Ngates)

    yaochain1 = translate(circ1, N)
    st1 = zero_state(Int64(N))
    apply!(st1, yaochain1)
    # ysv1 = state(st1)
    # nrm1 = norm(ysv1)
    yaochain2 = translate(circ2, N)
    st2 = zero_state(Int64(N))
    apply!(st2, yaochain2)
    # ysv2 = state(st2)
    # nrm2 = norm(ysv2)

    psim1 = CHform(N)
    update_circ(psim1, circ1)
    # println(psim1)
    # println("-------------ABABABABABBBBBBBBBBBBBBBBBBAAAAAAAAAAA----------------")
    psim2 = CHform(N)
    update_circ(psim2, circ2)
    # println(psim2)
    # println("==================")
    # updateH(psim2, "4")
    # println("=pouet============")
    psim2 = conjugateCHf(psim2)
    # println(psim2)

    # spYao = dot(ysv2/nrm2, ysv1/nrm1)
    spYao = spH(st2, st1, N, J, h)
    spPsim = scalPrdt(psim2, psim1, J, h)

    if abs(spYao - spPsim) > 1e-14
        println("Error")
        println(spYao)
        println(spPsim)
        println(abs(spYao - spPsim))
        println(circ1)
        println(circ2)
        break
    end
end

